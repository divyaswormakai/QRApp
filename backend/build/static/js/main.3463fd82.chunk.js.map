{"version":3,"sources":["utils/constant.js","utils/axios.js","utils/helper.js","services/allServices.js","shared/jsonView.js","shared/RequestBody.js","shared/ToggleViewButton.js","components/atoms/EducationTable.js","components/atoms/JobExperienceTable.js","components/atoms/OtherFieldTable.js","components/atoms/SkillTable.js","components/atoms/SummaryTable.js","components/All.js","services/educationServices.js","components/Education.js","services/jobExperienceServices.js","components/JobExperience.js","services/otherFieldService.js","components/OtherField.js","services/skillService.js","components/Skill.js","services/summaryService.js","components/Summary.js","App.js","reportWebVitals.js","index.js"],"names":["BACKEND_URL","process","API_URL","VIEW_OPTIONS","axios","defaults","baseURL","flattenObject","object","returnObject","Object","keys","forEach","key","getAllList","a","get","results","data","summaryList","summary","console","log","JsonView","name","src","enableClipboard","collapseStringsAfterLength","collapsed","RequestBody","url","className","href","ToogleViewButton","buttonText","toggleButton","onClick","EducationTable","educationList","map","education","indx","width","class","degree","college","address","date","from","to","courses","course","JobExperienceTable","jobExperienceList","job","title","company","description","tasks","task","OtherFieldTable","otherFieldList","field","details","join","SkillTable","skillList","skill","skills","skillset","SummaryTable","email","phone","linkedIn","github","facebook","All","useState","allList","setAllList","currentView","setCurrentView","useEffect","GetAllListings","colSpan","jobExperience","otherFields","educationURL","getEducationList","Education","setEducationList","jobExperienceURL","getJobExperienceList","JobExperience","setJobExperienceList","otherFieldURL","getOtherFieldList","OtherField","setOtherFieldList","skillURL","getSkillList","Skills","setSkillList","summaryURL","getSummaryList","curatedResult","getSummaryById","id","addNewSummary","newSummary","post","status","Error","error","updateSummary","updatedSummary","put","deleteSummary","delete","Summary","setSummaryList","summaryService","getSummary","sections","App","currentSection","setCurrentSection","getClassName","section","Skill","getActiveSection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3463fd82.chunk.js","sourcesContent":["export const BACKEND_URL =\r\n\tprocess.env.BACKEND_URL || 'https://dipesh-cv-api.herokuapp.com/';\r\nexport const API_URL = 'https://api.dipeche.com/';\r\nexport const VIEW_OPTIONS = ['Table View', 'JSON Tree'];\r\n","import axios from 'axios';\r\n\r\nimport { BACKEND_URL } from './constant';\r\n\r\naxios.defaults.baseURL = BACKEND_URL;\r\n\r\nexport default axios;\r\n","export const flattenObject = (object, returnObject) => {\r\n\tObject.keys(object).forEach((key) => {\r\n\t\tif (typeof object[key] === 'object') {\r\n\t\t\tflattenObject(object[key], returnObject);\r\n\t\t} else {\r\n\t\t\treturnObject[key] = object[key];\r\n\t\t}\r\n\t});\r\n\treturn returnObject;\r\n};\r\n","import axios from '../utils/axios';\r\nimport { flattenObject } from '../utils/helper';\r\n\r\nconst allUrl = `/all`;\r\nexport const getAllList = async () => {\r\n\ttry {\r\n\t\tconst results = await axios.get(allUrl);\r\n\t\tconst data = results.data;\r\n\t\tconst summaryList = {};\r\n\t\tflattenObject(results.data.summary, summaryList);\r\n\t\tdata.summary = summaryList;\r\n\t\tconsole.log(data);\r\n\t\treturn results.data;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n","import React from 'react';\r\nimport ReactJson from 'react-json-view';\r\n\r\nconst JsonView = ({ data, name }) => {\r\n\t// TODO: make data editable and saveable and things like that\r\n\treturn (\r\n\t\t<ReactJson\r\n\t\t\tsrc={data}\r\n\t\t\tenableClipboard={true}\r\n\t\t\tname={name}\r\n\t\t\tcollapseStringsAfterLength={10}\r\n\t\t\tcollapsed={2}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default JsonView;\r\n","import React from 'react';\r\n\r\nconst RequestBody = ({ url }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>Request</h1>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<b>GET</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t<a href={url}>\r\n\t\t\t\t\t\t<i>{url}</i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default RequestBody;\r\n","import React from 'react';\r\n\r\nconst ToogleViewButton = ({ buttonText, toggleButton }) => {\r\n\treturn (\r\n\t\t<button onClick={toggleButton} className=\"btn btn-warning\">\r\n\t\t\tSwitch to {buttonText}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default ToogleViewButton;\r\n","import React from 'react';\r\n\r\nconst EducationTable = ({ educationList }) => {\r\n\treturn educationList.map((education, indx) => (\r\n\t\t<tr key={`Educationid-${indx}`}>\r\n\t\t\t<td width=\"10%\">{indx + 1}.</td>\r\n\t\t\t<td width=\"90%\">\r\n\t\t\t\t<table class=\"table\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Degree:</td>\r\n\t\t\t\t\t\t<td>{education.degree}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>College:</td>\r\n\t\t\t\t\t\t<td>{education.college}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Address:</td>\r\n\t\t\t\t\t\t<td>{education.address}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Duration:</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t{education.date?.from} - {education.date?.to}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Courses</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t{education.courses.map((course) => (\r\n\t\t\t\t\t\t\t\t<p>{course}</p>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</table>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t));\r\n};\r\n\r\nexport default EducationTable;\r\n","import React from 'react';\r\n\r\nconst JobExperienceTable = ({ jobExperienceList }) => {\r\n\treturn jobExperienceList.map((job, indx) => (\r\n\t\t<tr key={`JobId-${indx}`}>\r\n\t\t\t<td width=\"10%\">{indx + 1}.</td>\r\n\t\t\t<td width=\"90%\">\r\n\t\t\t\t<table class=\"table\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td width=\"20%\">Title</td>\r\n\t\t\t\t\t\t<td width=\"80%\">{job.title}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td width=\"20%\">Company</td>\r\n\t\t\t\t\t\t<td width=\"80%\">{job.company}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td width=\"20%\">Address</td>\r\n\t\t\t\t\t\t<td width=\"80%\">{job.address}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td width=\"20%\">Years</td>\r\n\t\t\t\t\t\t<td width=\"80%\">\r\n\t\t\t\t\t\t\t{job.date?.from} - {job.date?.to}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td width=\"20%\">Description</td>\r\n\t\t\t\t\t\t<td width=\"80%\">{job.description}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td width=\"20%\">Tasks & Achievements</td>\r\n\t\t\t\t\t\t<td width=\"80%\">\r\n\t\t\t\t\t\t\t{job.tasks.map((task) => (\r\n\t\t\t\t\t\t\t\t<p>{task}</p>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</table>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t));\r\n};\r\n\r\nexport default JobExperienceTable;\r\n","import React from 'react';\r\n\r\nconst OtherFieldTable = ({ otherFieldList }) => {\r\n\treturn otherFieldList.map((field, indx) => (\r\n\t\t<tr key={`FieldId-${indx}`}>\r\n\t\t\t<td>{field.name}</td>\r\n\t\t\t<td>{field.details.join(', ')}</td>\r\n\t\t</tr>\r\n\t));\r\n};\r\n\r\nexport default OtherFieldTable;\r\n","import React from 'react';\r\n\r\nconst SkillTable = ({ skillList }) => {\r\n\treturn skillList.map((skill, indx) => (\r\n\t\t<tr key={`Skillid-${indx}`}>\r\n\t\t\t<td width=\"40%\">\r\n\t\t\t\t<h3>{skill.title}</h3>\r\n\t\t\t</td>\r\n\t\t\t<td width=\"60%\">\r\n\t\t\t\t{skill.skills.map((skillset) => (\r\n\t\t\t\t\t<p>{skillset}</p>\r\n\t\t\t\t))}\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t));\r\n};\r\n\r\nexport default SkillTable;\r\n","import React from 'react';\r\n\r\nconst SummaryTable = ({ summaryList }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<b>Name</b>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>{summaryList?.name}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<b>Title</b>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>{summaryList?.title}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<b>Summary</b>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>{summaryList?.summary}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<b>Address</b>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>{summaryList?.address}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<b>Email</b>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>{summaryList?.email}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<b>Phone</b>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>{summaryList?.phone}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<b>Linkedin</b>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>{summaryList?.linkedIn}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<b>Github</b>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>{summaryList?.github}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<b>Facebook</b>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>{summaryList?.facebook}</td>\r\n\t\t\t</tr>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SummaryTable;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { getAllList } from '../services/allServices';\r\nimport JsonView from '../shared/jsonView';\r\nimport RequestBody from '../shared/RequestBody';\r\nimport ToogleViewButton from '../shared/ToggleViewButton';\r\nimport { API_URL, VIEW_OPTIONS } from '../utils/constant';\r\nimport EducationTable from './atoms/EducationTable';\r\nimport JobExperienceTable from './atoms/JobExperienceTable';\r\nimport OtherFieldTable from './atoms/OtherFieldTable';\r\nimport SkillTable from './atoms/SkillTable';\r\nimport SummaryTable from './atoms/SummaryTable';\r\n\r\nconst All = () => {\r\n\tconst [allList, setAllList] = useState([]);\r\n\tconst [currentView, setCurrentView] = useState(1);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst GetAllListings = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst results = await getAllList();\r\n\t\t\t\tsetAllList(results);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t};\r\n\t\tGetAllListings();\r\n\t}, []);\r\n\r\n\tconst toggleButton = () => {\r\n\t\tsetCurrentView(1 - currentView);\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<RequestBody url={`${API_URL}all`} />\r\n\t\t\t<table className=\"table\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th colSpan={2}>\r\n\t\t\t\t\t\t\tResponse:{' '}\r\n\t\t\t\t\t\t\t<ToogleViewButton\r\n\t\t\t\t\t\t\t\ttoggleButton={toggleButton}\r\n\t\t\t\t\t\t\t\tbuttonText={VIEW_OPTIONS[1 - currentView]}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{currentView === 0 ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<h4>Summary</h4>\r\n\t\t\t\t\t\t\t<SummaryTable summaryList={allList.summary} />\r\n\t\t\t\t\t\t\t<h4>Education</h4>\r\n\t\t\t\t\t\t\t<EducationTable educationList={allList.education} />\r\n\t\t\t\t\t\t\t<h4>Work Experience</h4>\r\n\t\t\t\t\t\t\t<JobExperienceTable jobExperienceList={allList.jobExperience} />\r\n\t\t\t\t\t\t\t<h4>Skills</h4>\r\n\t\t\t\t\t\t\t<SkillTable skillList={allList.skills} />\r\n\t\t\t\t\t\t\t<h4>Others</h4>\r\n\t\t\t\t\t\t\t<OtherFieldTable otherFieldList={allList.otherFields} />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td colSpan={2}>\r\n\t\t\t\t\t\t\t\t<JsonView data={allList} name=\"cv\" />\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default All;\r\n","import axios from '../utils/axios';\r\n\r\nconst educationURL = `/education`;\r\nexport const getEducationList = async () => {\r\n\ttry {\r\n\t\tconst results = await axios.get(educationURL);\r\n\r\n\t\treturn results.data;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const getEducationById = async (id) => {\r\n\ttry {\r\n\t\tconst results = await axios.get(`${educationURL}/${id}`);\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const addNewEducation = async (newEducation) => {\r\n\ttry {\r\n\t\tconst results = await axios.post(educationURL + '/new', newEducation);\r\n\t\tif (results.status !== 200) {\r\n\t\t\tthrow new Error(results.error);\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const updateEducation = async (updatedEducation) => {\r\n\ttry {\r\n\t\tconst results = await axios.put(\r\n\t\t\t`${educationURL}/update/${updatedEducation.id}`,\r\n\t\t\tupdatedEducation\r\n\t\t);\r\n\t\tif (results.status !== 200) {\r\n\t\t\tthrow new Error(results.error);\r\n\t\t}\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const deleteEducation = async (id) => {\r\n\ttry {\r\n\t\tconst results = await axios.delete(`${educationURL}/${id}`);\r\n\t\tif (results.status !== 200) {\r\n\t\t\tthrow new Error(results.error);\r\n\t\t}\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { getEducationList } from '../services/educationServices';\r\nimport JsonView from '../shared/jsonView';\r\nimport RequestBody from '../shared/RequestBody';\r\nimport ToogleViewButton from '../shared/ToggleViewButton';\r\nimport { API_URL, VIEW_OPTIONS } from '../utils/constant';\r\nimport EducationTable from './atoms/EducationTable';\r\n\r\nconst Education = () => {\r\n\tconst [educationList, setEducationList] = useState([]);\r\n\tconst [currentView, setCurrentView] = useState(1);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst GetAllListings = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst results = await getEducationList();\r\n\t\t\t\tsetEducationList(results);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t};\r\n\t\tGetAllListings();\r\n\t}, []);\r\n\r\n\tconst toggleButton = () => {\r\n\t\tsetCurrentView(1 - currentView);\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<RequestBody url={`${API_URL}education`} />\r\n\t\t\t<table className=\"table\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th colSpan={2}>\r\n\t\t\t\t\t\t\tResponse:{' '}\r\n\t\t\t\t\t\t\t<ToogleViewButton\r\n\t\t\t\t\t\t\t\ttoggleButton={toggleButton}\r\n\t\t\t\t\t\t\t\tbuttonText={VIEW_OPTIONS[1 - currentView]}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{currentView === 0 ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<EducationTable educationList={educationList} />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td colSpan={2}>\r\n\t\t\t\t\t\t\t\t<JsonView data={educationList} name=\"education\" />\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Education;\r\n","import axios from '../utils/axios';\r\n\r\nconst jobExperienceURL = `/work-experience`;\r\nexport const getJobExperienceList = async () => {\r\n\ttry {\r\n\t\tconst results = await axios.get(jobExperienceURL);\r\n\t\treturn results.data;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\n// export const getJobExperienceById = async (id) => {\r\n// \ttry {\r\n// \t\tconst results = await axios.get(`${jobExperienceURL}/${id}`);\r\n// \t\treturn results;\r\n// \t} catch (err) {\r\n// \t\tconsole.log(err);\r\n// \t}\r\n// };\r\n\r\nexport const addNewJobExperience = async (newJobExperience) => {\r\n\ttry {\r\n\t\tconst results = await axios.post(\r\n\t\t\tjobExperienceURL + '/new',\r\n\t\t\tnewJobExperience\r\n\t\t);\r\n\t\tif (results.status !== 200) {\r\n\t\t\tthrow new Error(results.error);\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const updateJobExperience = async (updatedJobExperience) => {\r\n\ttry {\r\n\t\tconst results = await axios.put(\r\n\t\t\t`${jobExperienceURL}/update/${updatedJobExperience.id}`,\r\n\t\t\tupdatedJobExperience\r\n\t\t);\r\n\t\tif (results.status !== 200) {\r\n\t\t\tthrow new Error(results.error);\r\n\t\t}\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const deleteJobExperience = async (id) => {\r\n\ttry {\r\n\t\tconst results = await axios.delete(`${jobExperienceURL}/${id}`);\r\n\t\tif (results.status !== 200) {\r\n\t\t\tthrow new Error(results.error);\r\n\t\t}\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { getJobExperienceList } from '../services/jobExperienceServices';\r\nimport JsonView from '../shared/jsonView';\r\nimport RequestBody from '../shared/RequestBody';\r\nimport ToogleViewButton from '../shared/ToggleViewButton';\r\nimport { API_URL, VIEW_OPTIONS } from '../utils/constant';\r\nimport JobExperienceTable from './atoms/JobExperienceTable';\r\n\r\nconst JobExperience = () => {\r\n\tconst [jobExperienceList, setJobExperienceList] = useState([]);\r\n\tconst [currentView, setCurrentView] = useState(1);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst GetAllListings = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst results = await getJobExperienceList();\r\n\t\t\t\tsetJobExperienceList(results);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t};\r\n\t\tGetAllListings();\r\n\t}, []);\r\n\r\n\tconst toggleButton = () => {\r\n\t\tsetCurrentView(1 - currentView);\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<RequestBody url={`${API_URL}work-experience`} />\r\n\t\t\t<table className=\"table\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th colSpan={2}>\r\n\t\t\t\t\t\t\tResponse:{' '}\r\n\t\t\t\t\t\t\t<ToogleViewButton\r\n\t\t\t\t\t\t\t\ttoggleButton={toggleButton}\r\n\t\t\t\t\t\t\t\tbuttonText={VIEW_OPTIONS[1 - currentView]}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{currentView === 0 ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<JobExperienceTable jobExperienceList={jobExperienceList} />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td colSpan={2}>\r\n\t\t\t\t\t\t\t\t<JsonView data={jobExperienceList} name=\"work_experience\" />\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default JobExperience;\r\n","import axios from '../utils/axios';\r\n\r\nconst otherFieldURL = `/other-fields`;\r\nexport const getOtherFieldList = async () => {\r\n\ttry {\r\n\t\tconst results = await axios.get(otherFieldURL);\r\n\t\treturn results.data;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const getOtherFieldById = async (id) => {\r\n\ttry {\r\n\t\tconst results = await axios.get(`${otherFieldURL}/${id}`);\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const addNewOtherField = async (newOtherField) => {\r\n\ttry {\r\n\t\tconst results = await axios.post(otherFieldURL + '/new', newOtherField);\r\n\t\tif (results.status !== 200) {\r\n\t\t\tthrow new Error(results.error);\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const updateOtherField = async (updatedOtherField) => {\r\n\ttry {\r\n\t\tconst results = await axios.put(\r\n\t\t\t`${otherFieldURL}/update/${updatedOtherField.id}`,\r\n\t\t\tupdatedOtherField\r\n\t\t);\r\n\t\tif (results.status !== 200) {\r\n\t\t\tthrow new Error(results.error);\r\n\t\t}\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const deleteOtherField = async (id) => {\r\n\ttry {\r\n\t\tconst results = await axios.delete(`${otherFieldURL}/${id}`);\r\n\t\tif (results.status !== 200) {\r\n\t\t\tthrow new Error(results.error);\r\n\t\t}\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { getOtherFieldList } from '../services/otherFieldService';\r\nimport JsonView from '../shared/jsonView';\r\nimport RequestBody from '../shared/RequestBody';\r\nimport ToogleViewButton from '../shared/ToggleViewButton';\r\nimport { API_URL, VIEW_OPTIONS } from '../utils/constant';\r\nimport OtherFieldTable from './atoms/OtherFieldTable';\r\n\r\nconst OtherField = () => {\r\n\tconst [otherFieldList, setOtherFieldList] = useState([]);\r\n\tconst [currentView, setCurrentView] = useState(1);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst GetAllListings = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst results = await getOtherFieldList();\r\n\t\t\t\tsetOtherFieldList(results);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t};\r\n\t\tGetAllListings();\r\n\t}, []);\r\n\r\n\tconst toggleButton = () => {\r\n\t\tsetCurrentView(1 - currentView);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<RequestBody url={`${API_URL}other-fields`} />\r\n\t\t\t<table className=\"table\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th colSpan={2}>\r\n\t\t\t\t\t\t\tResponse:{' '}\r\n\t\t\t\t\t\t\t<ToogleViewButton\r\n\t\t\t\t\t\t\t\ttoggleButton={toggleButton}\r\n\t\t\t\t\t\t\t\tbuttonText={VIEW_OPTIONS[1 - currentView]}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{currentView === 0 ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<OtherFieldTable otherFieldList={otherFieldList} />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td colSpan={2}>\r\n\t\t\t\t\t\t\t\t<JsonView data={otherFieldList} name=\"other_fields\" />\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default OtherField;\r\n","import axios from '../utils/axios';\r\n\r\nconst skillURL = `/skills`;\r\nexport const getSkillList = async () => {\r\n\ttry {\r\n\t\tconst results = await axios.get(skillURL);\r\n\t\treturn results.data;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const getSkillById = async (id) => {\r\n\ttry {\r\n\t\tconst results = await axios.get(`${skillURL}/${id}`);\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const addNewSkill = async (newSkill) => {\r\n\ttry {\r\n\t\tconst results = await axios.post(`${skillURL}/new`, newSkill);\r\n\t\tif (results.status !== 200) {\r\n\t\t\tthrow new Error(results.error);\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const updateSkill = async (updatedSkill) => {\r\n\ttry {\r\n\t\tconst results = await axios.put(\r\n\t\t\t`${skillURL}/update/${updatedSkill.id}`,\r\n\t\t\tupdatedSkill\r\n\t\t);\r\n\t\tif (results.status !== 200) {\r\n\t\t\tthrow new Error(results.error);\r\n\t\t}\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const deleteSkill = async (id) => {\r\n\ttry {\r\n\t\tconst results = await axios.delete(`${skillURL}/${id}`);\r\n\t\tif (results.status !== 200) {\r\n\t\t\tthrow new Error(results.error);\r\n\t\t}\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { getSkillList } from '../services/skillService';\r\nimport JsonView from '../shared/jsonView';\r\nimport RequestBody from '../shared/RequestBody';\r\nimport ToogleViewButton from '../shared/ToggleViewButton';\r\nimport { API_URL, VIEW_OPTIONS } from '../utils/constant';\r\nimport SkillTable from './atoms/SkillTable';\r\n\r\nconst Skills = () => {\r\n\tconst [skillList, setSkillList] = useState([]);\r\n\tconst [currentView, setCurrentView] = useState(1);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst GetAllListings = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst results = await getSkillList();\r\n\t\t\t\tsetSkillList(results);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t};\r\n\t\t// AddNewData();\r\n\t\tGetAllListings();\r\n\t}, []);\r\n\r\n\tconst toggleButton = () => {\r\n\t\tsetCurrentView(1 - currentView);\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<RequestBody url={`${API_URL}skills`} />\r\n\t\t\t<table className=\"table\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th colSpan={2}>\r\n\t\t\t\t\t\t\tResponse:{' '}\r\n\t\t\t\t\t\t\t<ToogleViewButton\r\n\t\t\t\t\t\t\t\ttoggleButton={toggleButton}\r\n\t\t\t\t\t\t\t\tbuttonText={VIEW_OPTIONS[1 - currentView]}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{currentView === 0 ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<SkillTable skillList={skillList} />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td colSpan={2}>\r\n\t\t\t\t\t\t\t\t<JsonView data={skillList} name=\"skill\" />\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Skills;\r\n","import axios from '../utils/axios';\r\nimport { flattenObject } from '../utils/helper';\r\n\r\nconst summaryURL = `/summary`;\r\n\r\nconst getSummaryList = async () => {\r\n\ttry {\r\n\t\tconst results = await axios.get(summaryURL);\r\n\t\tconst curatedResult = {};\r\n\t\tflattenObject(results.data, curatedResult);\r\n\t\treturn curatedResult;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nconst getSummaryById = async (id) => {\r\n\ttry {\r\n\t\tconst results = await axios.get(`${summaryURL}/${id}`);\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nconst addNewSummary = async (newSummary) => {\r\n\ttry {\r\n\t\tconst results = await axios.post(summaryURL + '/new', newSummary);\r\n\t\tif (results.status !== 200) {\r\n\t\t\tthrow new Error(results.error);\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nconst updateSummary = async (updatedSummary) => {\r\n\ttry {\r\n\t\tconst results = await axios.put(\r\n\t\t\t`${summaryURL}/update/${updatedSummary.id}`,\r\n\t\t\tupdatedSummary\r\n\t\t);\r\n\t\tif (results.status !== 200) {\r\n\t\t\tthrow new Error(results.error);\r\n\t\t}\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nconst deleteSummary = async (id) => {\r\n\ttry {\r\n\t\tconst results = await axios.delete(`${summaryURL}/${id}`);\r\n\t\tif (results.status !== 200) {\r\n\t\t\tthrow new Error(results.error);\r\n\t\t}\r\n\t\treturn results;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport default {\r\n\tgetSummaryList,\r\n\tgetSummaryById,\r\n\taddNewSummary,\r\n\tupdateSummary,\r\n\tdeleteSummary,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport summaryService from '../services/summaryService';\r\nimport JsonView from '../shared/jsonView';\r\nimport RequestBody from '../shared/RequestBody';\r\nimport ToogleViewButton from '../shared/ToggleViewButton';\r\nimport { API_URL, VIEW_OPTIONS } from '../utils/constant';\r\nimport SummaryTable from './atoms/SummaryTable';\r\n\r\nconst Summary = () => {\r\n\tconst [summaryList, setSummaryList] = useState({});\r\n\tconst [currentView, setCurrentView] = useState(1);\r\n\tuseEffect(() => {\r\n\t\tconst getSummary = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst results = await summaryService.getSummaryList();\r\n\t\t\t\tdelete results.id;\r\n\t\t\t\tsetSummaryList({ ...results });\r\n\t\t\t} catch (err) {}\r\n\t\t};\r\n\t\tgetSummary();\r\n\t}, []);\r\n\r\n\tconst toggleButton = () => {\r\n\t\tsetCurrentView(1 - currentView);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<RequestBody url={`${API_URL}summary`} />\r\n\t\t\t<table className=\"table\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th colSpan={2}>\r\n\t\t\t\t\t\t\tResponse:{' '}\r\n\t\t\t\t\t\t\t<ToogleViewButton\r\n\t\t\t\t\t\t\t\ttoggleButton={toggleButton}\r\n\t\t\t\t\t\t\t\tbuttonText={VIEW_OPTIONS[1 - currentView]}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{currentView === 0 ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<SummaryTable summaryList={summaryList} />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td colSpan={2}>\r\n\t\t\t\t\t\t\t\t<JsonView data={summaryList} name=\"summary\" />\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Summary;\r\n","import './App.css';\n\nimport React, { useState } from 'react';\n\nimport All from './components/All';\nimport Education from './components/Education';\nimport JobExperience from './components/JobExperience';\nimport OtherField from './components/OtherField';\nimport Skills from './components/Skill';\nimport Summary from './components/Summary';\n\nconst sections = [\n\t'All',\n\t'Summary',\n\t'Education',\n\t'Experience',\n\t'Skills',\n\t'Others',\n];\n\nfunction App() {\n\tconst [currentSection, setCurrentSection] = useState('All');\n\n\tconst getClassName = (section) => {\n\t\tconst returnClass =\n\t\t\tcurrentSection === section\n\t\t\t\t? 'col-sm-12 col-md-2 btn btn-success'\n\t\t\t\t: 'col-sm-12 col-md-2 btn btn-outline-success';\n\t\treturn returnClass;\n\t};\n\n\tconst getActiveSection = () => {\n\t\tswitch (currentSection) {\n\t\t\tcase sections[1]:\n\t\t\t\treturn <Summary />;\n\t\t\tcase sections[2]:\n\t\t\t\treturn <Education />;\n\t\t\tcase sections[3]:\n\t\t\t\treturn <JobExperience />;\n\t\t\tcase sections[4]:\n\t\t\t\treturn <Skills />;\n\t\t\tcase sections[5]:\n\t\t\t\treturn <OtherField />;\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<All />\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t}\n\t};\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">Dipesh K. Sharma</header>\n\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"navbar\">\n\t\t\t\t\t{sections.map((section) => (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\tclassName={getClassName(section)}\n\t\t\t\t\t\t\tonClick={() => setCurrentSection(section)}\n\t\t\t\t\t\t\tkey={`Navbar-${section}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{section}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"content-div\">{getActiveSection()}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}